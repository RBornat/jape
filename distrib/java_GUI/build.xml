<project>

    <condition property="eawtjar" value="appleeawt_8.jar" else="appleeawt_7.jar">
        <equals arg1="${ant.java.version}" arg2="1.8" forcestring="true"/>
    </condition>
    
    <!-- Target machine and source language.
         This is to avoid inheriting target JVM from the ant runtime context.
         For the moment (2018) we want to compile code compatible with
         1.7 (some people still have that) yet still capable of running
         on recent JVMs.
    --> 
    <property name="targetJVM"  value="1.7" /> 
    <property name="sourceJava" value="1.7" /> 
    
    <!-- Use environment to acquire JAPE version: too many differences in behaviour of
         shell+make between Linux and OS/X to do this by passing a -D parameter to ant.
    -->
    <property environment="environment"/> 
    <condition property="GUIVERSION" value="${environment.JAPEVERSION}" else="JAPE VERSION UNSPECIFIED">
     <isset property="environment.JAPEVERSION"/>
    </condition>

    <target name="clean">
        <delete dir="build"/>
        <delete file="src/base/uk/org/jape/Version.java"/>
    </target>

    <target name="OSXcompile">
        <mkdir dir="build/classes"/>
        <mkdir dir="build/classes/OSX"/>
        <javac 
            source = "${sourceJava}"
            target = "${targetJVM}"
            deprecation="on"
            debug="on"
            debuglevel="source,lines"
            includeantruntime="false"
            sourcepath="."
            srcdir="src/base:src/OSX"
            destdir="build/classes/OSX"
        >
        
        <classpath>
         <pathelement location="${eawtjar}"/>
        </classpath>
        
        </javac>
        
    </target>

    <target name="standardcompile">
        <mkdir dir="build/classes"/>
        <mkdir dir="build/classes/standard"/>
        <javac 
            source = "${sourceJava}"
            target = "${targetJVM}"
            deprecation="on"
            debug="on"
            debuglevel="source,lines"
            sourcepath=""
            srcdir="src/base:src/standard"
            destdir="build/classes/standard"
        />
    </target>

    <target name="version">
        <echo file="src/base/uk/org/jape/Version.java">
            package uk.org.jape; 
            public class Version { 
                static final String guiversion = "${GUIVERSION}"; 
            }
        </echo>
    </target>
    
    <target name="basejar">
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/base.jar" 
             basedir="extras"
             includes = "**/*.jpg **/*.gif"
             >
        </jar>
    </target>
    
    <target name="OSX.jar" depends="version,basejar,OSXcompile">
        <mkdir dir="build/jar/OSX"/>
        <copy file="build/jar/base.jar" tofile="build/jar/OSX/Jape.jar"/>
        <jar destfile="build/jar/OSX/Jape.jar" 
             basedir="build/classes/OSX"
             includes = "**/*.class"
             update="yes"
             duplicate="fail"
             >
            <manifest>
                <attribute name="Main-Class" value="uk.org.jape.Jape"/>
            </manifest>
        </jar>
    </target>
    
    <target name="Jape.jar" depends="version,basejar,standardcompile">
        <mkdir dir="build/jar/standard"/>
        <copy file="build/jar/base.jar" tofile="build/jar/standard/Jape.jar"/>
        <jar destfile="build/jar/standard/Jape.jar" 
             basedir="build/classes/standard"
             includes = "**/*.class"
             update="yes"
             duplicate="fail"
             >
            <manifest>
                <attribute name="Main-Class" value="uk.org.jape.Jape"/>
            </manifest>
        </jar>
    </target>
    
    <target name="run" depends="Jape.jar">
        <java jar="build/jar/standard/Jape.jar" fork="true"/>
    </target>

</project>







